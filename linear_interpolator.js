// Generated by CoffeeScript 1.4.0
(function() {

  define("linear_interpolator", function() {
    var LinearInterpolator;
    LinearInterpolator = (function() {

      function LinearInterpolator(xs, ys) {
        if (ys == null) {
          ys = null;
        }
        if (ys) {
          this.xs = xs;
          this.ys = ys;
        } else {
          this.xs = _.map(_.keys(xs), function(x) {
            return parseFloat(x);
          }).sort();
          this.ys = _.map(this.xs, function(x) {
            return xs[x];
          });
        }
      }

      LinearInterpolator.prototype.simpleInterpolate = function(x, x0, x1, y0, y1) {
        return y0 + (y1 - y0) * (x - x0) / (x1 - x0);
      };

      LinearInterpolator.prototype.at = function(x) {
        var max, min, n;
        if (this.xs.length === 0) {
          return 0;
        }
        if (this.xs.length === 1) {
          return this.ys[0];
        }
        if (x <= this.xs[0]) {
          return this.ys[0];
        }
        if (x >= this.xs[this.xs.length - 1]) {
          return this.ys[this.ys.length - 1];
        }
        min = 0;
        max = this.xs.length - 2;
        while (min !== max) {
          n = Math.floor((max + min + 1) / 2);
          if (x >= this.xs[n]) {
            min = n;
          } else {
            n = max = n - 1;
          }
        }
        return this.simpleInterpolate(x, this.xs[n], this.xs[n + 1], this.ys[n], this.ys[n + 1]);
      };

      return LinearInterpolator;

    })();
    return LinearInterpolator;
  });

}).call(this);
